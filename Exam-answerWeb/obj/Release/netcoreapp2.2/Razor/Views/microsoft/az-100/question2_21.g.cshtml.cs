#pragma checksum "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4abe87f3d82a46710fc4b1d27d1fc1c2434a8772"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question2_21), @"mvc.1.0.view", @"/Views/microsoft/az-100/question2_21.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question2_21.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question2_21))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4abe87f3d82a46710fc4b1d27d1fc1c2434a8772", @"/Views/microsoft/az-100/question2_21.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question2_21 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 180, true);
            WriteLiteral("\r\n                You create a binary large object (blob) storage account named reportstorage99 that contains archival reports from past corporate board meetings.\r\n                ");
            EndContext();
            BeginContext(385, 26, false);
#line 8 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(411, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(465, 25, false);
#line 11 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(490, 243, true);
            WriteLiteral("\r\n                A board member requests access to a specific report. The member does not have an Azure Active Directory (Azure AD) user account. Moreover, he has access only to a web browser on his Google Chromebook device.\r\n                ");
            EndContext();
            BeginContext(734, 26, false);
#line 13 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(760, 542, true);
            WriteLiteral(@"
            </p>
            <p>
                You need to provide the board member with least-privilege access to the requested report while maintaining security compliance and minimizing administrative overhead.
            </p>
            <p>
                What should you do?
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li>
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1302, "\"", 1326, 1);
#line 29 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 1307, Html.GetNextId(), 1307, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1327, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1398, "\"", 1427, 1);
#line 30 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 1404, Html.GetNextId(true), 1404, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1428, 301, true);
            WriteLiteral(@">
                            Create an Azure AD account for the board member and grant him role-based access control (RBAC) access to the storage account.
                        </label>
                    </li>
                    <li>
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1729, "\"", 1753, 1);
#line 35 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 1734, Html.GetNextId(), 1734, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1754, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1825, "\"", 1854, 1);
#line 36 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 1831, Html.GetNextId(true), 1831, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1855, 353, true);
            WriteLiteral(@">
                            Deploy a point-to-site virtual private network (VPN)connection on the board member's Chromebook and grant the board member role-based access control (RBAC) access to the report.
                        </label>
                    </li>
                    <li>
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2208, "\"", 2232, 1);
#line 41 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 2213, Html.GetNextId(), 2213, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2233, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2304, "\"", 2333, 1);
#line 42 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 2310, Html.GetNextId(true), 2310, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2334, 221, true);
            WriteLiteral(">\r\n                            Deploy Azure Traffic Manager.\r\n                        </label>\r\n                    </li>\r\n                    <li class=\"correct\">\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2555, "\"", 2579, 1);
#line 47 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 2560, Html.GetNextId(), 2560, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2580, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2651, "\"", 2680, 1);
#line 48 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_21.cshtml"
WriteAttributeValue("", 2657, Html.GetNextId(true), 2657, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2681, 3188, true);
            WriteLiteral(@">
                            Generate a shared access signature (SAS) token for the report and share the Uniform Resource Locator (URL) with the board member.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should generate an SAS token for the report and share the URL with the board member. SAS enables you to define time-limited read-only or read-write access to Azure storage account resources. It is important that you set the time restriction properly because the SAS includes no authentication. Any person with access to the URL can access the target resource(s) within the token's lifetime.  In this case, you both minimize administrative effort as well as maintain security compliance because the SAS token points only to a single file, not the entire blob container that hosts the requested report.
            </p>
            <p>
             ");
            WriteLiteral(@"   You should not create an Azure AD account for the board member and grant him RBAC access to the storage account. First, it requires significant management overhead to create and manage Azure AD accounts, even for external (guest) users. Second, SAS and not RBAC is the way Azure provides screened access to individual storage account resources. You can use RBAC roles only at the storage account scope.
            </p>
            <p>
                You should not copy the report to an Azure File Service share and provide the board member with a PowerShell connection script. Here you create security and governance problems by creating multiple copies of the source report, as well as producing unnecessary administrative complexity.
            </p>
            <p>
                You should not deploy a point-to-site (P2S) VPN connection on the board member's Chromebook and grant the board member RBAC access to the report. The scenario stipulates that the board member is limited to using a web browser o");
            WriteLiteral(@"n his Chromebook. Furthermore, the Azure P2S VPN client is supported only on Windows, macOS, and endorsed Linux distributions. Chrome OS is not supported.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1"" target=""_blank"" rel=""noopener"">Using shared access signatures (SAS)</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-external-users"" target=""_blank"" rel=""noopener"">Manage access for external users using RBAC</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/storage/files/storage-files-introduction"" target=""_blank"" rel=""noopener"">What is Azure Files?</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/vpn-gateway/point-to-site-a");
            WriteLiteral("bout\" target=\"_blank\" rel=\"noopener\">About Point-to-Site VPN</a>\r\n            </p>\r\n        </div>\r\n    </li>\r\n</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

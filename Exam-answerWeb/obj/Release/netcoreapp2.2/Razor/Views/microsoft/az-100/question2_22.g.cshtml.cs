#pragma checksum "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4b133e79b6c3d0e0f6b420d6ee4b92dc0d008652"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question2_22), @"mvc.1.0.view", @"/Views/microsoft/az-100/question2_22.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question2_22.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question2_22))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b133e79b6c3d0e0f6b420d6ee4b92dc0d008652", @"/Views/microsoft/az-100/question2_22.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question2_22 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 118, true);
            WriteLiteral("\r\n                The development team asks you to provision an Azure storage account for their use.\r\n                ");
            EndContext();
            BeginContext(323, 26, false);
#line 8 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(349, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(403, 25, false);
#line 11 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(428, 172, true);
            WriteLiteral("\r\n                To remain in compliance with IT security policy, you need to ensure that the new Azure storage account meets the following requirements:\r\n                ");
            EndContext();
            BeginContext(601, 26, false);
#line 13 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(627, 584, true);
            WriteLiteral(@"
            </p>
            <p>
                * Data must be encrypted at rest.
                <br />
                * Access keys must facilitate automatic rotation.
                <br />
                * The company must manage the access keys.
            </p>
            <p>
                What should you do?
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li>
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1211, "\"", 1235, 1);
#line 33 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 1216, Html.GetNextId(), 1216, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1236, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1307, "\"", 1336, 1);
#line 34 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 1313, Html.GetNextId(true), 1313, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1337, 224, true);
            WriteLiteral(">\r\n                            Require secure transfer for the storage account.\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1561, "\"", 1585, 1);
#line 39 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 1566, Html.GetNextId(), 1566, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1586, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1657, "\"", 1686, 1);
#line 40 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 1663, Html.GetNextId(true), 1663, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1687, 239, true);
            WriteLiteral(">\r\n                            Enable Storage Service Encryption (SSE) on the storage account.\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1926, "\"", 1950, 1);
#line 45 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 1931, Html.GetNextId(), 1931, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1951, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2022, "\"", 2051, 1);
#line 46 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 2028, Html.GetNextId(true), 2028, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2052, 275, true);
            WriteLiteral(@">
                            Create a service endpoint between the storage account and a virtual network (VNet).
                        </label>
                    </li>
                    <li class=""correct"">
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2327, "\"", 2351, 1);
#line 51 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 2332, Html.GetNextId(), 2332, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2352, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2423, "\"", 2452, 1);
#line 52 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_22.cshtml"
WriteAttributeValue("", 2429, Html.GetNextId(true), 2429, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2453, 2678, true);
            WriteLiteral(@">
                            Configure the storage account to store its keys in Azure Key Vault.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should configure the storage account to store its keys in Azure Key Vault. Azure Key Vault provides a mechanism to store secrets, such as storage account keys, user credentials, and digital certificates, securely in the Microsoft Azure cloud. You can access the underlying Representational State Transfer (REST) application programming interface (API) to rotate or retrieve the secrets in your source code.
            </p>
            <p>
                You should not enable SSE on the storage account for two reasons. First, SSE is enabled automatically on all Azure storage accounts and encrypts all storage account data at rest. Second, SSE in its native form uses Microsoft-managed access keys, which v");
            WriteLiteral(@"iolates the scenario constraint for customer-managed keys.
            </p>
            <p>
                You should not require secure transfer for the storage account. Secure transfer forces all REST API calls to use HTTPS instead of HTTP. This feature has nothing to do with either access keys or their management and rotation.
            </p>
            <p>
                You should not create a service endpoint between the storage account and a VNet. A service endpoint allows you limit traffic to a storage account from resources residing on an Azure VNet.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/storage/common/storage-service-encryption-customer-managed-keys"" target=""_blank"" rel=""noopener"">Storage Service Encryption using customer-managed keys in Azure Key Vault</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/st");
            WriteLiteral(@"orage/common/storage-service-encryption"" target=""_blank"" rel=""noopener"">Azure Storage Service Encryption for Data at Rest</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer"" target=""_blank"" rel=""noopener"">Require secure transfer in Azure Storage</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-service-endpoints-overview"" target=""_blank"" rel=""noopener"">Virtual Network Service Endpoints</a>
            </p>
        </div>
    </li>
</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

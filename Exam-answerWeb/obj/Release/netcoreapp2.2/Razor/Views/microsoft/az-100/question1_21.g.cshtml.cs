#pragma checksum "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0dd049c88db97adaaa3bc8ec54d7cfc720864d2e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question1_21), @"mvc.1.0.view", @"/Views/microsoft/az-100/question1_21.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question1_21.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question1_21))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0dd049c88db97adaaa3bc8ec54d7cfc720864d2e", @"/Views/microsoft/az-100/question1_21.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question1_21 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 219, true);
            WriteLiteral("\r\n                Your company has a line-of-business (LOB) application that uses Azure SQL Database for storing transactional information. Your company also has deployed System Center Service Manager.\r\n                ");
            EndContext();
            BeginContext(424, 26, false);
#line 8 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(450, 737, true);
            WriteLiteral(@"
            </p>
            <p>
                You need to configure an alert when the database reaches the 70% of CPU usage. When this alert rises, you need to notify several users by email and by SMS. You also need to automatically create a ticket in the ITSM system. Your solution should require the minimum administrative effort.
            </p>
            <p>
                Which two actions should you perform? Each correct answer presents part of the solution.
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li class=""correct"">
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1187, "\"", 1211, 1);
#line 24 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 1192, Html.GetNextId(), 1192, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1212, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1289, "\"", 1318, 1);
#line 25 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 1295, Html.GetNextId(true), 1295, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1319, 300, true);
            WriteLiteral(@">
                            Configure one Action Group with three actions: one for email notification, one for SMS notification, and one for ITSM ticket creation.
                        </label>
                    </li>
                    <li>
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1619, "\"", 1643, 1);
#line 30 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 1624, Html.GetNextId(), 1624, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1644, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1721, "\"", 1750, 1);
#line 31 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 1727, Html.GetNextId(true), 1727, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1751, 228, true);
            WriteLiteral(">\r\n                            Configure System Center Service Manager with Azure Automation.\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"checkbox\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1979, "\"", 2003, 1);
#line 36 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 1984, Html.GetNextId(), 1984, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2004, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2081, "\"", 2110, 1);
#line 37 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 2087, Html.GetNextId(true), 2087, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2111, 292, true);
            WriteLiteral(@">
                            Configure two Action Groups: one Action Group for email and SMS notification and one for ITSM ticket creation.
                        </label>
                    </li>
                    <li class=""correct"">
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2403, "\"", 2427, 1);
#line 42 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 2408, Html.GetNextId(), 2408, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2428, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2505, "\"", 2534, 1);
#line 43 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question1_21.cshtml"
WriteAttributeValue("", 2511, Html.GetNextId(true), 2511, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2535, 2650, true);
            WriteLiteral(@">
                            Configure an IT Service Management Connector (ITSMC).
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should configure an ITSMC. You need configure an ITSM connector for connecting Azure with your System Center Service Manager service. Using this connector, you can create work items in the ITSM system based on alerts.
            </p>
            <p>
                You should also configure one Action Group with three actions: one for email notification, one for SMS notification, and one for ITSM ticket creation. Once the alert fires, you need to configure the actions that the alert will perform. You can configure several types of actions for the alert, like Azure App Push, Email, SMS, Voice, Runbooks, Logic Apps, ITSM, or Webhooks. You can add several actions to the same action group.
            </p>
        ");
            WriteLiteral(@"    <p>
                You should not configure two Action Groups. Although you can create two separate action groups with different actions and attach them to the same alert, this would require more administrative effort.
            </p>
            <p>
                You should not configure System Center Service Manager with Azure Automation. You could configure an Azure Automation Hybrid Worker for running Azure Automation runbooks to create tasks in System Center Service Manager, but this solution would require much more effort.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-itsmc-overview"" target=""_blank"" rel=""noopener"">Connect Azure to ITSM tools using IT Service Management Connector</a>
            </p>
            <p>
                <a href=""https://blogs.technet.microsoft.com/robdavies/2016/07/12/auto-assign-scsm-incidents-with-azure-auto");
            WriteLiteral(@"mation/"" target=""_blank"" rel=""noopener"">Auto Assign SCSM Incidents with Azure Automation</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-action-groups"" target=""_blank"" rel=""noopener"">Create and manage action groups in the Azure portal</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/sql-database/sql-database-monitor-tune-overview"" target=""_blank"" rel=""noopener"">Monitoring and performance tuning</a>
            </p>
        </div>
    </li>
</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

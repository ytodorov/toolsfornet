#pragma checksum "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4db77e420c4c38ba0032ab1a64e12cf73af4f944"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question2_1), @"mvc.1.0.view", @"/Views/microsoft/az-100/question2_1.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question2_1.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question2_1))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4db77e420c4c38ba0032ab1a64e12cf73af4f944", @"/Views/microsoft/az-100/question2_1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question2_1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 188, true);
            WriteLiteral("\r\n                You have a website hosted in Azure App Services that is used globally within your company. The website contains a mixture of dynamic and static content.\r\n                ");
            EndContext();
            BeginContext(393, 26, false);
#line 8 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(419, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(473, 25, false);
#line 11 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(498, 144, true);
            WriteLiteral("\r\n                You are asked to put a Content Delivery Network (CDN) in place to optimize the experience for the end users.\r\n                ");
            EndContext();
            BeginContext(643, 26, false);
#line 13 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(669, 535, true);
            WriteLiteral(@"
            </p>
            <p>
                You need to configure the CDN and web app to optimize both dynamic and static content where possible.
            </p>
            <p>
                What two actions should you perform? Each correct answer presents part of the solution.
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li>
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1204, "\"", 1228, 1);
#line 29 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 1209, Html.GetNextId(), 1209, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1229, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1306, "\"", 1335, 1);
#line 30 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 1312, Html.GetNextId(true), 1312, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1336, 224, true);
            WriteLiteral(">\r\n                            Implement general web delivery on the CDN.\r\n                        </label>\r\n                    </li>\r\n                    <li class=\"correct\">\r\n                        <input type=\"checkbox\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1560, "\"", 1584, 1);
#line 35 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 1565, Html.GetNextId(), 1565, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1585, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1662, "\"", 1691, 1);
#line 36 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 1668, Html.GetNextId(true), 1668, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1692, 208, true);
            WriteLiteral(">\r\n                            Implement custom caching rules on the CDN.\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"checkbox\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1900, "\"", 1924, 1);
#line 41 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 1905, Html.GetNextId(), 1905, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1925, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2002, "\"", 2031, 1);
#line 42 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 2008, Html.GetNextId(true), 2008, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2032, 235, true);
            WriteLiteral(">\r\n                            Implement cross origin sharing (CORS) on the website.\r\n                        </label>\r\n                    </li>\r\n                    <li class=\"correct\">\r\n                        <input type=\"checkbox\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2267, "\"", 2291, 1);
#line 47 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 2272, Html.GetNextId(), 2272, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2292, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2369, "\"", 2398, 1);
#line 48 "C:\Projects\exam-answer-repo\Exam-answer\Exam-answerWeb\Views\microsoft\az-100\question2_1.cshtml"
WriteAttributeValue("", 2375, Html.GetNextId(true), 2375, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2399, 2301, true);
            WriteLiteral(@">
                            Implement dynamic site acceleration (DSA) on the CDN.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should implement Dynamic Site Acceleration (DSA) on the CDN. DSA adds support for route optimization, TCP optimizations, object prefetch, and adaptive image compression, all of which provide improved performance for dynamically generated content.
            </p>
            <p>
                You should also implement custom caching rules on the CDN to identify the difference between static and dynamic content. DSA cannot cache content because by nature it is dynamic. In this case, if you implement DSA on the CDN, you need to implement custom caching rules to identify the source of static content, which can be cached within the CDN.
            </p>
            <p>
                You should not implement gen");
            WriteLiteral(@"eral web delivery on the CDN. This will result in caching the static web content but not affect the dynamically generated content.
            </p>
            <p>
                You should not implement CORS on the website. This allows scripting elements such as JavaScript to interact with the backend platforms in your environment.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cdn/cdn-dynamic-site-acceleration"" target=""_blank"" rel=""noopener"">Dynamic Site Acceleration via Azure CDN</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cdn/cdn-optimization-overview"" target=""_blank"" rel=""noopener"">Optimize Azure CDN for the type of content delivery</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cdn/cdn-caching-rules"" target=""_blank"" rel=""noopener"">Control Azure CDN caching behav");
            WriteLiteral("ior with caching rules</a>\r\n            </p>\r\n            <p>\r\n                <a href=\"https://docs.microsoft.com/en-us/azure/cdn/cdn-cors\" target=\"_blank\" rel=\"noopener\">Using Azure CDN with CORS</a>\r\n            </p>\r\n        </div>\r\n    </li>\r\n</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

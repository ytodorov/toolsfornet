#pragma checksum "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_15.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4d43698df67a85190754d501ea5c222534220702"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question1_15), @"mvc.1.0.view", @"/Views/microsoft/az-100/question1_15.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question1_15.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question1_15))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4d43698df67a85190754d501ea5c222534220702", @"/Views/microsoft/az-100/question1_15.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question1_15 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_15.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_15.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 174, true);
            WriteLiteral("\r\n                Your company is performing an internal audit for reviewing the company\'s IT infrastructure, including the Azure infrastructure you manage.\r\n                ");
            EndContext();
            BeginContext(379, 26, false);
#line 8 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_15.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(405, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(459, 25, false);
#line 11 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_15.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(484, 199, true);
            WriteLiteral("\r\n                Your company also has an Office 365 subscription. The on-premises Active Directory Domain Services (AD DS) domain is synced with Azure Active Directory (Azure AD).\r\n                ");
            EndContext();
            BeginContext(684, 26, false);
#line 13 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_15.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(710, 5330, true);
            WriteLiteral(@"
            </p>
            <p>
                You need to provide auditors with administrator privileges. They need to be able to review users created in your Azure AD tenant. They should not be able to register applications in your Azure AD tenant.
            </p>
            <p>
                Which four actions should you perform in sequence? To answer, move the appropriate actions from the list of possible actions to the answer area and arrange them in the correct order.
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <div class=""demo-section hidden-on-narrow two-way wide"">
                <div class=""list-wrapper"">
                    <ul id=""sortable-listC"">
                        <li class=""list-item corect 1"">Create a Microsoft account for each auditor.</li>
                        <li class=""list-item corect 2"">Assign the owner role to each account.</li>
                        <li class=""list-item corect 3"">");
            WriteLiteral(@"Add each auditor account as co-administrator.</li>
                        <li class=""list-item corect 4"">Assign the Directory Reader role to each account.</li>
                        <li class=""list-item"">Assign the contributors role to each account</li>
                        <li class=""list-item"">Assign the Company Administrator role to each account.</li>
                        <li class=""list-item"">Assign the Application Developer role to each account.</li>
                        <li class=""list-item"">Create an Office 365 user account for each auditor.</li>
                    </ul>
                </div>
            </div>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should perform the following actions in order:
            </p>
            <p>
                1. Create a Microsoft account for each auditor.
                <br />
                2. Assign the owner role to each account.
                <br />
          ");
            WriteLiteral(@"      3. Add each auditor account as co-administrator.
                <br />
                4. Assign the Directory Reader role to each account.
            </p>
            <p>
                First, you need to create a Microsoft account for each auditor that needs to be granted with administrator privileges on the subscription. Using Microsoft accounts, you need to manage those users as guest users.
            </p>
            <p>
                Next, you need to assign the owner role to each auditor's account. Only users with the owner role can be configured as subscription co-administrators.
            </p>
            <p>
                Next, you need to assign the co-administrator role to each auditor's account.
            </p>
            <p>
                Finally, you need to grant the Directory Reader role to each auditor's account. Because you use guest accounts, these users do not have the same permissions as an Azure AD Work or School account. Guest users with co-administra");
            WriteLiteral(@"tor privileges cannot access information from users or register applications in the Azure AD tenant. You need to manually grant the Directory Reader privileges to the auditor accounts.
            </p>
            <p>
                You should not assign the contributor role. You can only assign the co-administrator role to subscription owners.
            </p>
            <p>
                You should not create an Office 365 user account for each auditor. This type of account would grant the auditors more privileges than needed. When you grant co-administrator privileges to Azure AD Work or School accounts, you grant all privileges to these users, including read permission over other users or the ability to create new applications in the Azure AD tenant.
            </p>
            <p>
                You should not grant the Application Developer role. This role allows the user to create new applications in the Azure AD tenant. This goes against required privileges mentioned in the scenario.
 ");
            WriteLiteral(@"           </p>
            <p>
                You should not grant the Company Administrator role. This role allows you to manage the Azure AD tenant globally, including the ability to add new applications to the tenant.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a title=""Add or change Azure subscription administrators"" href=""https://docs.microsoft.com/en-us/azure/billing/billing-add-change-azure-subscription-administrator"" target=""_blank"" rel=""noopener"">Add or change Azure subscription administrators</a>
            </p>
            <p>
                <a title=""Administrator role permissions in Azure Active Directory"" href=""https://docs.microsoft.com/en-us/azure/active-directory/users-groups-roles/directory-assign-admin-roles"" target=""_blank"" rel=""noopener""><br>Administrator role permissions in Azure Active Directory</a>
            </p>
            <p>
                <a title=""Built-in roles for Azure resources"" hr");
            WriteLiteral("ef=\"https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles\" target=\"_blank\" rel=\"noopener\"><br>Built-in roles for Azure resources</a>\r\n            </p>\r\n        </div>\r\n    </li>\r\n</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

#pragma checksum "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c0eb672189191e1b8f15707920736bffff3c9d1e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question3_10), @"mvc.1.0.view", @"/Views/microsoft/az-100/question3_10.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question3_10.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question3_10))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c0eb672189191e1b8f15707920736bffff3c9d1e", @"/Views/microsoft/az-100/question3_10.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question3_10 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 245, true);
            WriteLiteral("\r\n                Your company purchases a new application and is planning to deploy it in Azure. The application requires Windows Server 2016. It also requires high-availability, so it will be deployed using a scalability set.\r\n                ");
            EndContext();
            BeginContext(450, 26, false);
#line 8 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(476, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(530, 25, false);
#line 11 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(555, 206, true);
            WriteLiteral("\r\n                You are asked to prepare the virtual machine (VM) to automatically deploy all needed requirements for the application to run. You decide to use a custom script extension.\r\n                ");
            EndContext();
            BeginContext(762, 26, false);
#line 13 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(788, 774, true);
            WriteLiteral(@"
            </p>
            <p>
                Before deploying the custom script, you test it and ensure that the script runs with no errors in the local environment. You store the script and some dependencies needed for the application in a blob storage account.
            </p>
            <p>
                While you are testing automatic deployment, you realize that the custom script is not running.
            </p>
            <p>
                What is the reason for the custom script not running?
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li>
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1562, "\"", 1586, 1);
#line 32 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 1567, Html.GetNextId(), 1567, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1587, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1658, "\"", 1687, 1);
#line 33 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 1664, Html.GetNextId(true), 1664, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1688, 237, true);
            WriteLiteral(">\r\n                            The operation is taking more than 90 minutes.\r\n                        </label>\r\n                    </li>\r\n                    <li class=\"correct\">\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1925, "\"", 1949, 1);
#line 38 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 1930, Html.GetNextId(), 1930, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1950, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2021, "\"", 2050, 1);
#line 39 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 2027, Html.GetNextId(true), 2027, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2051, 237, true);
            WriteLiteral(">\r\n                            You need to add an entry in the Network Security Group (NSG).\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2288, "\"", 2312, 1);
#line 44 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 2293, Html.GetNextId(), 2293, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2313, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2384, "\"", 2413, 1);
#line 45 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 2390, Html.GetNextId(true), 2390, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2414, 235, true);
            WriteLiteral(">\r\n                            You need to configure a proxy server for the custom script.\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2649, "\"", 2673, 1);
#line 50 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 2654, Html.GetNextId(), 2654, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2674, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2745, "\"", 2774, 1);
#line 51 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question3_10.cshtml"
WriteAttributeValue("", 2751, Html.GetNextId(true), 2751, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2775, 2532, true);
            WriteLiteral(@">
                            You need to sign the script.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                Your custom script is failing to run because you need to add an entry in the NSG. By default, communication with external systems are restricted. If you store your script in any external resource, like Azure Storage, Github, or a local server, you need to configure the firewall/NSG.
            </p>
            <p>
                Your custom script is not failing to run because you need to sign the script. You can invoke your custom script by using the following command:
            </p>
            <p>
                powershell -ExecutionPolicy Unrestricted -File your-custom-script.ps1
            </p>
            <p>
                Your script is failing to run because the resource manager is not able to access to it due to communi");
            WriteLiteral(@"cation restrictions.
            </p>
            <p>
                Your custom script is not failing to run because the operation is taking more than 90 minutes. The issue is that the script is not able to run at all because the resource manager is not able to access it due to communication restrictions.
            </p>
            <p>
                Your custom script is not failing to run because you need to configure a proxy server for the custom script. A custom script does not support proxy settings. If you need to use a proxy for connecting to an external resource, you can use third-party applications like curl.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/custom-script-windows"" target=""_blank"" rel=""noopener"" tabindex=""190"">Custom Script Extension for Windows</a>
            </p>
            <p>
                <a href=""https://docs.micr");
            WriteLiteral(@"osoft.com/en-us/azure/virtual-machines/windows/tutorial-automate-vm-deployment"" target=""_blank"" rel=""noopener"" tabindex=""190"">Tutorial - Deploy applications to a Windows virtual machine in Azure with the Custom Script Extension</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/virtual-network/security-overview"" target=""_blank"" rel=""noopener"" tabindex=""190"">Security groups</a>
            </p>
        </div>
    </li>
</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

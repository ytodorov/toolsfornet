#pragma checksum "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "50445561a9af571934511221782efce0be9c9c5e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question1_22), @"mvc.1.0.view", @"/Views/microsoft/az-100/question1_22.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question1_22.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question1_22))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"50445561a9af571934511221782efce0be9c9c5e", @"/Views/microsoft/az-100/question1_22.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question1_22 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 292, true);
            WriteLiteral(@"
                Your company has an Azure subscription that hosts all services that the company uses in production. The Finance department notices that the bills related to Azure are increasing. The company wants to keep the costs of this Azure subscription under control.
                ");
            EndContext();
            BeginContext(497, 26, false);
#line 8 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(523, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(577, 25, false);
#line 11 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(602, 179, true);
            WriteLiteral("\r\n                After reviewing the costs analysis reports you realize that there are several virtual machines that are consuming more resources than expected.\r\n                ");
            EndContext();
            BeginContext(782, 26, false);
#line 13 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(808, 468, true);
            WriteLiteral(@"
            </p>
            <p>
                You need to inform management when the spend for these resources is unusual.
            </p>
            <p>
                What should you do?
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li class=""correct"">
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1276, "\"", 1300, 1);
#line 29 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 1281, Html.GetNextId(), 1281, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1301, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1372, "\"", 1401, 1);
#line 30 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 1378, Html.GetNextId(true), 1378, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1402, 232, true);
            WriteLiteral(">\r\n                            Configure the PowerBI content pack for Azure Enterprise.\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1634, "\"", 1658, 1);
#line 35 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 1639, Html.GetNextId(), 1639, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1659, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1730, "\"", 1759, 1);
#line 36 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 1736, Html.GetNextId(true), 1736, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1760, 249, true);
            WriteLiteral(">\r\n                            Configure a billing alert in the subscription page of the account portal.\r\n                        </label>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"radio\" name=\"group\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2009, "\"", 2033, 1);
#line 41 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 2014, Html.GetNextId(), 2014, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2034, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2105, "\"", 2134, 1);
#line 42 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 2111, Html.GetNextId(true), 2111, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2135, 256, true);
            WriteLiteral(@">
                            Use the costs-by-service blade in the cost analysis section of the subscription.
                        </label>
                    </li>
                    <li>
                        <input type=""radio"" name=""group""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2391, "\"", 2415, 1);
#line 47 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 2396, Html.GetNextId(), 2396, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2416, 71, true);
            WriteLiteral(" class=\"k-radio\">\r\n                        <label class=\"k-radio-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2487, "\"", 2516, 1);
#line 48 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_22.cshtml"
WriteAttributeValue("", 2493, Html.GetNextId(true), 2493, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2517, 2923, true);
            WriteLiteral(@">
                            Configure a report schedule in the Cost Management portal.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should configure a report schedule in the Cost Management portal. The Cost Management portal allows you to perform detailed cost analysis of your resources. When running a cost report, you can set the filter for the virtual machines that are consuming more resources than expected. Then you can schedule that report to run periodically and send it to a list of recipients. You can also save it to a JSON or CSV report in a Storage Account. Then you can set three different alert levels for the report, one for the green level, one for the yellow level and one for the red level. You need to set the cost thresholds for levels yellow and red.
            </p>
            <p>
                You should not configure a ");
            WriteLiteral(@"billing alert in the subscription page of the account portal. This allows you to create alerts based on billing totals or monetary credits that apply to the entire subscription. You cannot configure alerts for specific resources in the subscription.
            </p>
            <p>
                You should not configure the Power BI content pack for Azure Enterprise. This option allows you to connect your Enterprise Agreement subscription with Power BI for cost analysis. You can create alerts in Power BI if you are using a Power BI Pro license. You also need an Enterprise Agreement subscription.
            </p>
            <p>
                You should not use the costs-by-service blade in the cost analysis section of the subscription. You can use this section for reviewing the cost analysis per service, but you cannot configure any alert for the service consumption on this page.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
             ");
            WriteLiteral(@"   <a href=""https://docs.microsoft.com/en-us/azure/cost-management/tutorial-review-usage"" target=""_blank"" rel=""noopener"">Tutorial: Review usage and costs</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cost-management/"" target=""_blank"" rel=""noopener"">Azure Cost Management Documentation</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/billing/billing-getting-started"" target=""_blank"" rel=""noopener"">Prevent unexpected charges with Azure billing and cost management</a>
            </p>
            <p>
                <a href=""https://azure.microsoft.com/en-us/blog/new-power-bi-content-pack-for-azure-enterprise-users/"" target=""_blank"" rel=""noopener"">New Power BI content pack for Azure Enterprise users</a>
            </p>
        </div>
    </li>
</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

#pragma checksum "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b5a8b3620f028a0b12702a169dee28a54d6faad5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question1_7), @"mvc.1.0.view", @"/Views/microsoft/az-100/question1_7.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question1_7.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question1_7))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b5a8b3620f028a0b12702a169dee28a54d6faad5", @"/Views/microsoft/az-100/question1_7.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question1_7 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 124, true);
            WriteLiteral("\r\n                You deploy an application in a resource group named App-RG01 in your Azure subscription.\r\n                ");
            EndContext();
            BeginContext(329, 26, false);
#line 8 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(355, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(409, 25, false);
#line 11 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(434, 79, true);
            WriteLiteral("\r\n                App-RG01 contains the following components:\r\n                ");
            EndContext();
            BeginContext(514, 26, false);
#line 13 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(540, 785, true);
            WriteLiteral(@"
            </p>
            <p>
                * Two App Services, each with an SSL certificate
                <br />
                * A peered virtual network (VNet)
                <br />
                * Redis cache deployed in the VNet
                <br />
                * Standard Load Balancer
            </p>
            <p>
                You need to move all resources in App-RG01 to a new resource group named App-RG02.
            </p>
            <p>
                Choose all that apply:
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li class=""correct"">
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1325, "\"", 1349, 1);
#line 38 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 1330, Html.GetNextId(), 1330, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1350, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1427, "\"", 1456, 1);
#line 39 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 1433, Html.GetNextId(true), 1433, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1457, 266, true);
            WriteLiteral(@">
                            You need to delete SSL certificate from each App Service before moving it to the new resource group.
                        </label>
                    </li>
                    <li>
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1723, "\"", 1747, 1);
#line 44 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 1728, Html.GetNextId(), 1728, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1748, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1825, "\"", 1854, 1);
#line 45 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 1831, Html.GetNextId(true), 1831, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1855, 247, true);
            WriteLiteral(">\r\n                            You can move the Load Balancer only within the same subscription.\r\n                        </label>\r\n                    </li>\r\n                    <li class=\"correct\">\r\n                        <input type=\"checkbox\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2102, "\"", 2126, 1);
#line 50 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 2107, Html.GetNextId(), 2107, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2127, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2204, "\"", 2233, 1);
#line 51 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 2210, Html.GetNextId(true), 2210, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2234, 234, true);
            WriteLiteral(">\r\n                            You need to disable the peer before moving the VNet.\r\n                        </label>\r\n                    </li>\r\n                    <li class=\"correct\">\r\n                        <input type=\"checkbox\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2468, "\"", 2492, 1);
#line 56 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 2473, Html.GetNextId(), 2473, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2493, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2570, "\"", 2599, 1);
#line 57 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question1_7.cshtml"
WriteAttributeValue("", 2576, Html.GetNextId(true), 2576, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2600, 2009, true);
            WriteLiteral(@">
                            You can move the VNet only within the same subscription.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should create a tag named CostCenter and assign it to each resource group. Creating a tag and assigning it to each resource group allows you to easily identify the cost center associated with each resource group. When you associate a tag with a resource or resource group, you need to provide a value to that tag. You can instruct the accounting department to use the Azure Cost Management tool to review the costs associated with each cost center by filtering by the newly created tag.
            </p>
            <p>
                You should also create a tag named CostCenter and assign it to each resource. If you apply a tag to a resource group, that tag is not inherited by the resources in the resource group. ");
            WriteLiteral(@"You need to manually configure the tag for each resource that you want to include in the cost center. You can automate this action by using a PowerShell or Azure CLI script.
            </p>
            <p>
                You should not instruct the accounting department to use either the Cost Analysis blade in the subscription panel or the Azure Account Center. Because your subscription is managed by a Cloud Service Provider, you can get that information from your provider. You can also get this information by using the Azure Cost Management tool.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a title=""Move resources to new resource group or subscription"" href=""https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-move-resources"" target=""_blank"" rel=""noopener"">Move resources to new resource group or subscription</a>
            </p>
        </div>
    </li>
</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

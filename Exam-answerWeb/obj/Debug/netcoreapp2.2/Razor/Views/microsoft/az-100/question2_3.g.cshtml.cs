#pragma checksum "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0f024f2f7d57d264d709773f7aa0c10e482fd491"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_microsoft_az_100_question2_3), @"mvc.1.0.view", @"/Views/microsoft/az-100/question2_3.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/microsoft/az-100/question2_3.cshtml", typeof(AspNetCore.Views_microsoft_az_100_question2_3))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb;

#line default
#line hidden
#line 2 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Models;

#line default
#line hidden
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Exam_answerWeb.Infrastructure;

#line default
#line hidden
#line 4 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI.Fluent;

#line default
#line hidden
#line 5 "C:\Projects\toolsfornet\Exam-answerWeb\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f024f2f7d57d264d709773f7aa0c10e482fd491", @"/Views/microsoft/az-100/question2_3.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bee3447070987ca46eb03bbeb43d7bf40055dde5", @"/Views/_ViewImports.cshtml")]
    public class Views_microsoft_az_100_question2_3 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 111, true);
            WriteLiteral("<ul class=\"panelbar\">\r\n    <li class=\"k-state-active\">\r\n        <span class=\"k-link k-state-selected\">Question ");
            EndContext();
            BeginContext(112, 9, false);
#line 3 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
                                                  Write(Model?.Id);

#line default
#line hidden
            EndContext();
            BeginContext(121, 57, true);
            WriteLiteral("</span>\r\n        <div>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(179, 25, false);
#line 6 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
           Write(Html.Raw(Model.H1OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(204, 243, true);
            WriteLiteral("\r\n                Your company has developed a web application that serves dynamic and static content to users. The application is deployed in several Azure Web Apps in different Azure regions to achieve the best performance.\r\n                ");
            EndContext();
            BeginContext(448, 26, false);
#line 8 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
           Write(Html.Raw(Model.H1CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(474, 53, true);
            WriteLiteral("\r\n            </p>\r\n            <p>\r\n                ");
            EndContext();
            BeginContext(528, 25, false);
#line 11 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
           Write(Html.Raw(Model.H2OpenTag));

#line default
#line hidden
            EndContext();
            BeginContext(553, 155, true);
            WriteLiteral("\r\n                The Support department for the web application receives complains from users about poor performance of the application.\r\n                ");
            EndContext();
            BeginContext(709, 26, false);
#line 13 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
           Write(Html.Raw(Model.H2CloseTag));

#line default
#line hidden
            EndContext();
            BeginContext(735, 697, true);
            WriteLiteral(@"
            </p>
            <p>
                You review the performance of all components of the application and determine that you need to deploy a Content Delivery Network (CDN).
            </p>
            <p>
                You need to configure a CDN for achieving the best performance.
            </p>
            <p>
                What are two ways that you can configure the CDN? Each correct answer presents a complete solution.
            </p>
        </div>
    </li>
    <li class=""k-state-active"">
        Answers
        <div>
            <p>
                <ul class=""fieldlist"">
                    <li>
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1432, "\"", 1456, 1);
#line 32 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 1437, Html.GetNextId(), 1437, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1457, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1534, "\"", 1563, 1);
#line 33 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 1540, Html.GetNextId(true), 1540, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1564, 307, true);
            WriteLiteral(@">
                            Configure a single Azure CDN Premium from Verizon endpoint, configure dynamic site acceleration, and configure caching rules.
                        </label>
                    </li>
                    <li class=""correct"">
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1871, "\"", 1895, 1);
#line 38 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 1876, Html.GetNextId(), 1876, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1896, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 1973, "\"", 2002, 1);
#line 39 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 1979, Html.GetNextId(true), 1979, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2003, 291, true);
            WriteLiteral(@">
                            Configure a single Azure CDN Standard from Akamai endpoint, configure dynamic site acceleration, and configure caching rules.
                        </label>
                    </li>
                    <li>
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2294, "\"", 2318, 1);
#line 44 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 2299, Html.GetNextId(), 2299, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2319, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2396, "\"", 2425, 1);
#line 45 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 2402, Html.GetNextId(true), 2402, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2426, 305, true);
            WriteLiteral(@">
                            Configure a single Azure CDN Standard Microsoft endpoint, configure dynamic site acceleration, and configure caching rules.
                        </label>
                    </li>
                    <li class=""correct"">
                        <input type=""checkbox""");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2731, "\"", 2755, 1);
#line 50 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 2736, Html.GetNextId(), 2736, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2756, 77, true);
            WriteLiteral(" class=\"k-checkbox\">\r\n                        <label class=\"k-checkbox-label\"");
            EndContext();
            BeginWriteAttribute("for", " for=\"", 2833, "\"", 2862, 1);
#line 51 "C:\Projects\toolsfornet\Exam-answerWeb\Views\microsoft\az-100\question2_3.cshtml"
WriteAttributeValue("", 2839, Html.GetNextId(true), 2839, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2863, 2510, true);
            WriteLiteral(@">
                            Configure a single Azure CDN Standard from Verizon endpoint, configure dynamic site acceleration, and configure caching rules.
                        </label>
                    </li>
                </ul>
            </p>
        </div>
    </li>
    <li>
        Explanation
        <div>
            <p>
                You should configure a single Azure CDN Standard from Akamai or Azure CDN Standard from Verizon endpoint, configure dynamic site acceleration (DSA), and configure caching rules. Dynamic site acceleration improves the performance when delivering dynamic content to end users. For static content, you can create cache rules only for the static content. Enabling caching rules for dynamic content may negatively impact dynamic content. Alternatively, you could create two different CDN endpoints, one endpoint optimized with DSA and another endpoint optimized for static content.
            </p>
            <p>
                You should not configure a s");
            WriteLiteral(@"ingle Azure CDN Premium from Verizon endpoint, configure dynamic site acceleration, and configure caching rules. Although you can use this hybrid approach with Azure CDN Premium from Verizon endpoints, caching is configured using a rules engine instead of caching rules.
            </p>
            <p>
                You should not configure a single Azure CDN Standard Microsoft endpoint, configure dynamic site acceleration, and configure caching rules. This type of CDN endpoint does not allows dynamic site acceleration features.
            </p>
        </div>
    </li>
    <li>
        References
        <div>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cdn/cdn-dynamic-site-acceleration"" target=""_blank"" rel=""noopener"">Dynamic site acceleration via Azure CDN</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cdn/cdn-features"" target=""_blank"" rel=""noopener"">Compare Azure CDN product features</a>
            <");
            WriteLiteral(@"/p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cdn/cdn-caching-rules"" target=""_blank"" rel=""noopener"">Control Azure CDN caching behavior with caching rules</a>
            </p>
            <p>
                <a href=""https://docs.microsoft.com/en-us/azure/cdn/cdn-rules-engine"" target=""_blank"" rel=""noopener"">Override HTTP behavior using the Azure CDN rules engine</a>
            </p>
        </div>
    </li>
</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
